 <broker xmlns="http://activemq.apache.org/schema/core" brokerName="${HOSTNAME}" dataDirectory="${activemq.data}">

    <destinations>
      <queue physicalName="ttest.event.notifier"/>
      <queue physicalName="gtest.event.notifier"/>
      <topic physicalName="test.workorder"/>
      <queue physicalName="sub.gtest.test.workorder"/>
      <topic physicalName="vtest.promo"/>
      <queue physicalName="sub.gpro.vtest.promo"/>
      <queue physicalName="adding.testing"/>
      <queue physicalName="adding.another.testing"/>
    </destinations>

    <destinationInterceptors>
      <virtualDestinationInterceptor>
        <virtualDestinations>
          <virtualTopic name="test.workorder" prefix="sub.*." selectorAware="false"/>
          <virtualTopic name="vtest.promo" prefix="sub.*." selectorAware="false"/>
        </virtualDestinations>
      </virtualDestinationInterceptor>
    </destinationInterceptors>
              <individualDeadLetterStrategy topicPrefix="" topicSuffix=".DLQ" useQueueForTopicMessages="true" useQueueForQueueMessages="true"/>
            </deadLetterStrategy>
          </policyEntry>
        </policyEntries>
      </policyMap>
    </destinationPolicy>
        <map>
          <authorizationMap groupClass="org.apache.activemq.jaas.UserPrincipal">
            <authorizationEntries>
              <authorizationEntry
                topic="ActiveMQ.Advisory.>"
                read="test-consumer,test-publisher,test-notifier,g-test-consumer,v-test-publisher"
                write="test-consumer,test-publisher,test-notifier,g-test-consumer,v-test-publisher"
                admin="test-consumer,test-publisher,test-notifier,g-test-consumer,v-test-publisher"/>

              <authorizationEntry queue="gtest.>" read="test-consumer" write="test-publisher"/>
              <authorizationEntry topic="scheduall.>" write="test-notifier"/>
              <authorizationEntry queue="sub.*.scheduall.>" read="test-publisher"/>

              <authorizationEntry topic="vtest.>" write="v-test-publisher"/>
              <authorizationEntry queue="sub.*.vtest.>" read="g-test-consumer"/>

              <authorizationEntry topic="test.workorder" write="test-publisher"/>
              <authorizationEntry queue="sub.*.test.>" read="test-consumer"/>

            </authorizationEntries>
          </authorizationMap>
        </map>
      </authorizationPlugin>
    </plugins>

    <systemUsage>
      <systemUsage>
        <memoryUsage>
          <memoryUsage percentOfJvmHeap="70"/>
        </memoryUsage>
        <storeUsage>
          <storeUsage limit="${AMQ_STORAGE_USAGE_LIMIT}"/>
        </storeUsage>
        <tempUsage>
          <tempUsage limit="${AMQ_TEMP_USAGE_LIMIT}"/>
        </tempUsage>
      </systemUsage>
    </systemUsage>

    <transportConnectors>
      <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=2500&amp;wireFormat.maxFrameSize=104857600"/>
      <transportConnector name="amqp+ssl" uri="amqp+ssl://0.0.0.0:61617?maximumConnections=2500&amp;wireFormat.maxFrameSize=104857600"/>
    </transportConnectors>

    <sslContext>
      <sslContext keyStore="file:${AMQ_HOME}/conf/amq-server.ks" keyStorePassword="passwd" trustStore="file:${AMQ_HOME}/conf/amq-server.ts" trustStorePassword="passwd"/>
    </sslContext>

    <!-- destroy the spring context on shutdown to stop jetty -->
    <shutdownHooks>
      <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook"/>
    </shutdownHooks>

  </broker>

  <!-- ##### DATASOURCE_BEAN ##### -->

</beans>
